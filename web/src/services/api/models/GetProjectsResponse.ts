/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-12-20T18:15:53Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetProjectsResponsePhotosInner } from './GetProjectsResponsePhotosInner';
import {
    GetProjectsResponsePhotosInnerFromJSON,
    GetProjectsResponsePhotosInnerFromJSONTyped,
    GetProjectsResponsePhotosInnerToJSON,
} from './GetProjectsResponsePhotosInner';

/**
 * 
 * @export
 * @interface GetProjectsResponse
 */
export interface GetProjectsResponse {
    /**
     * 
     * @type {Array<GetProjectsResponsePhotosInner>}
     * @memberof GetProjectsResponse
     */
    photos?: Array<GetProjectsResponsePhotosInner>;
}

/**
 * Check if a given object implements the GetProjectsResponse interface.
 */
export function instanceOfGetProjectsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetProjectsResponseFromJSON(json: any): GetProjectsResponse {
    return GetProjectsResponseFromJSONTyped(json, false);
}

export function GetProjectsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'photos': !exists(json, 'photos') ? undefined : ((json['photos'] as Array<any>).map(GetProjectsResponsePhotosInnerFromJSON)),
    };
}

export function GetProjectsResponseToJSON(value?: GetProjectsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'photos': value.photos === undefined ? undefined : ((value.photos as Array<any>).map(GetProjectsResponsePhotosInnerToJSON)),
    };
}

